# Docker

trigger:
- master

resources:
- repo: self

variables:
  tag: 'v1'
  containerRegistry: 'dba3f8f5d0df4cb492652988af71367c.azurecr.io'
  imageRepository: 'demo/inventory-service'
  imagePullSecret: 'regcred'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'ACRConnection'
        repository: 'demo/inventory-service'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: $(tag)
    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'dev.dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'dev-myAKSCluster-dev-1573231993640'
              secretType: 'dockerRegistry'
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: 'ACRconnection'
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'dev-myAKSCluster-dev-1573231993640'
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              containers: $(containerRegistry)/$(imageRepository):$(tag)
              imagePullSecrets: $(imagePullSecret)
